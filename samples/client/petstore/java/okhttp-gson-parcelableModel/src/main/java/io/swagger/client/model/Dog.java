/*
 * Swagger Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Animal;
import java.io.IOException;
import android.os.Parcelable;
import android.os.Parcel;

/**
 * Dog
 */

public class Dog extends Animal {
@SerializedName("className")
  private String className = null;
  @SerializedName("color")
  private String color = "red";
  @SerializedName("breed")
  private String breed = null;
  
  public Dog className(String className) {
    this.className = className;
    return this;
  }

  
  /**
  * Get className
  * @return className
  **/
  @ApiModelProperty(required = true, value = "")
  public String getClassName() {
    return className;
  }
  public void setClassName(String className) {
    this.className = className;
  }
  
  public Dog color(String color) {
    this.color = color;
    return this;
  }

  
  /**
  * Get color
  * @return color
  **/
  @ApiModelProperty(value = "")
  public String getColor() {
    return color;
  }
  public void setColor(String color) {
    this.color = color;
  }
  
  public Dog breed(String breed) {
    this.breed = breed;
    return this;
  }

  
  /**
  * Get breed
  * @return breed
  **/
  @ApiModelProperty(value = "")
  public String getBreed() {
    return breed;
  }
  public void setBreed(String breed) {
    this.breed = breed;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dog dog = (Dog) o;
    return Objects.equals(this.className, dog.className) &&
        Objects.equals(this.color, dog.color) &&
        Objects.equals(this.breed, dog.breed) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(className, color, breed, super.hashCode());
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dog {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    className: ").append(toIndentedString(className)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    breed: ").append(toIndentedString(breed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
  public void writeToParcel(Parcel out, int flags) {
     super.writeToParcel(out, flags); 
    out.writeValue(className);
    out.writeValue(color);
    out.writeValue(breed);
    
  }

  public Dog() {
    super();
  }

  Dog(Parcel in) {
     super(in); 
    className = (String)in.readValue(null);color = (String)in.readValue(null);breed = (String)in.readValue(null);
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<Dog> CREATOR = new Parcelable.Creator<Dog>() {
    public Dog createFromParcel(Parcel in) {
      return new Dog(in);
    }
    public Dog[] newArray(int size) {
      return new Dog[size];
    }
  };
}



